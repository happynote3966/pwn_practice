
condition_68187f0953551cea907c48c016f19ff200de74b4:     file format elf64-x86-64


Disassembly of section .init:

0000000000400590 <_init>:
  400590:	sub    rsp,0x8
  400594:	mov    rax,QWORD PTR [rip+0x200a5d]        # 600ff8 <__gmon_start__>
  40059b:	test   rax,rax
  40059e:	je     4005a5 <_init+0x15>
  4005a0:	call   400650 <__gmon_start__@plt>
  4005a5:	add    rsp,0x8
  4005a9:	ret    

Disassembly of section .plt:

00000000004005b0 <.plt>:
  4005b0:	push   QWORD PTR [rip+0x200a52]        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4005b6:	jmp    QWORD PTR [rip+0x200a54]        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4005bc:	nop    DWORD PTR [rax+0x0]

00000000004005c0 <puts@plt>:
  4005c0:	jmp    QWORD PTR [rip+0x200a52]        # 601018 <puts@GLIBC_2.2.5>
  4005c6:	push   0x0
  4005cb:	jmp    4005b0 <.plt>

00000000004005d0 <fread@plt>:
  4005d0:	jmp    QWORD PTR [rip+0x200a4a]        # 601020 <fread@GLIBC_2.2.5>
  4005d6:	push   0x1
  4005db:	jmp    4005b0 <.plt>

00000000004005e0 <write@plt>:
  4005e0:	jmp    QWORD PTR [rip+0x200a42]        # 601028 <write@GLIBC_2.2.5>
  4005e6:	push   0x2
  4005eb:	jmp    4005b0 <.plt>

00000000004005f0 <setbuf@plt>:
  4005f0:	jmp    QWORD PTR [rip+0x200a3a]        # 601030 <setbuf@GLIBC_2.2.5>
  4005f6:	push   0x3
  4005fb:	jmp    4005b0 <.plt>

0000000000400600 <printf@plt>:
  400600:	jmp    QWORD PTR [rip+0x200a32]        # 601038 <printf@GLIBC_2.2.5>
  400606:	push   0x4
  40060b:	jmp    4005b0 <.plt>

0000000000400610 <__libc_start_main@plt>:
  400610:	jmp    QWORD PTR [rip+0x200a2a]        # 601040 <__libc_start_main@GLIBC_2.2.5>
  400616:	push   0x5
  40061b:	jmp    4005b0 <.plt>

0000000000400620 <gets@plt>:
  400620:	jmp    QWORD PTR [rip+0x200a22]        # 601048 <gets@GLIBC_2.2.5>
  400626:	push   0x6
  40062b:	jmp    4005b0 <.plt>

0000000000400630 <fopen@plt>:
  400630:	jmp    QWORD PTR [rip+0x200a1a]        # 601050 <fopen@GLIBC_2.2.5>
  400636:	push   0x7
  40063b:	jmp    4005b0 <.plt>

0000000000400640 <exit@plt>:
  400640:	jmp    QWORD PTR [rip+0x200a12]        # 601058 <exit@GLIBC_2.2.5>
  400646:	push   0x8
  40064b:	jmp    4005b0 <.plt>

Disassembly of section .plt.got:

0000000000400650 <__gmon_start__@plt>:
  400650:	jmp    QWORD PTR [rip+0x2009a2]        # 600ff8 <__gmon_start__>
  400656:	xchg   ax,ax

Disassembly of section .text:

0000000000400660 <_start>:
  400660:	xor    ebp,ebp
  400662:	mov    r9,rdx
  400665:	pop    rsi
  400666:	mov    rdx,rsp
  400669:	and    rsp,0xfffffffffffffff0
  40066d:	push   rax
  40066e:	push   rsp
  40066f:	mov    r8,0x4008c0
  400676:	mov    rcx,0x400850
  40067d:	mov    rdi,0x400771
  400684:	call   400610 <__libc_start_main@plt>
  400689:	hlt    
  40068a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000400690 <deregister_tm_clones>:
  400690:	mov    eax,0x601077
  400695:	push   rbp
  400696:	sub    rax,0x601070
  40069c:	cmp    rax,0xe
  4006a0:	mov    rbp,rsp
  4006a3:	jbe    4006c0 <deregister_tm_clones+0x30>
  4006a5:	mov    eax,0x0
  4006aa:	test   rax,rax
  4006ad:	je     4006c0 <deregister_tm_clones+0x30>
  4006af:	pop    rbp
  4006b0:	mov    edi,0x601070
  4006b5:	jmp    rax
  4006b7:	nop    WORD PTR [rax+rax*1+0x0]
  4006c0:	pop    rbp
  4006c1:	ret    
  4006c2:	nop    DWORD PTR [rax+0x0]
  4006c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004006d0 <register_tm_clones>:
  4006d0:	mov    esi,0x601070
  4006d5:	push   rbp
  4006d6:	sub    rsi,0x601070
  4006dd:	sar    rsi,0x3
  4006e1:	mov    rbp,rsp
  4006e4:	mov    rax,rsi
  4006e7:	shr    rax,0x3f
  4006eb:	add    rsi,rax
  4006ee:	sar    rsi,1
  4006f1:	je     400708 <register_tm_clones+0x38>
  4006f3:	mov    eax,0x0
  4006f8:	test   rax,rax
  4006fb:	je     400708 <register_tm_clones+0x38>
  4006fd:	pop    rbp
  4006fe:	mov    edi,0x601070
  400703:	jmp    rax
  400705:	nop    DWORD PTR [rax]
  400708:	pop    rbp
  400709:	ret    
  40070a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000400710 <__do_global_dtors_aux>:
  400710:	cmp    BYTE PTR [rip+0x200961],0x0        # 601078 <completed.7594>
  400717:	jne    40072a <__do_global_dtors_aux+0x1a>
  400719:	push   rbp
  40071a:	mov    rbp,rsp
  40071d:	call   400690 <deregister_tm_clones>
  400722:	pop    rbp
  400723:	mov    BYTE PTR [rip+0x20094e],0x1        # 601078 <completed.7594>
  40072a:	repz ret 
  40072c:	nop    DWORD PTR [rax+0x0]

0000000000400730 <frame_dummy>:
  400730:	mov    edi,0x600e20
  400735:	cmp    QWORD PTR [rdi],0x0
  400739:	jne    400740 <frame_dummy+0x10>
  40073b:	jmp    4006d0 <register_tm_clones>
  40073d:	nop    DWORD PTR [rax]
  400740:	mov    eax,0x0
  400745:	test   rax,rax
  400748:	je     40073b <frame_dummy+0xb>
  40074a:	push   rbp
  40074b:	mov    rbp,rsp
  40074e:	call   rax
  400750:	pop    rbp
  400751:	jmp    4006d0 <register_tm_clones>

0000000000400756 <init>:
  400756:	push   rbp
  400757:	mov    rbp,rsp
  40075a:	mov    rax,QWORD PTR [rip+0x20090f]        # 601070 <stdout@@GLIBC_2.2.5>
  400761:	mov    esi,0x0
  400766:	mov    rdi,rax
  400769:	call   4005f0 <setbuf@plt>
  40076e:	nop
  40076f:	pop    rbp
  400770:	ret    

0000000000400771 <main>:
int main(void){
	stack := 0x30
	char buf[44];//@[rbp-0x30]
	DWORD var1;//@[rbp-0x4]
	printf("Please tell me your name...");
	gets(buf);
	if(var1 == 0xdeadbeef){
		puts("OK! You have permission to get flag!!");
		sub_4007d3_read_file("flag.txt");
	}else{
		puts("Permission denied");
	}
	exit(0x0);
}

00000000004007d3 <read_file>:
  4007d3:	push   rbp
  4007d4:	mov    rbp,rsp
  4007d7:	sub    rsp,0xa0
  4007de:	mov    QWORD PTR [rbp-0x98],rdi
  4007e5:	mov    rax,QWORD PTR [rbp-0x98]
  4007ec:	mov    esi,0x400939
  4007f1:	mov    rdi,rax
  4007f4:	call   400630 <fopen@plt>
  4007f9:	mov    QWORD PTR [rbp-0x8],rax
  4007fd:	jmp    400817 <read_file+0x44>
  4007ff:	mov    rdx,QWORD PTR [rbp-0x10]
  400803:	lea    rax,[rbp-0x90]
  40080a:	mov    rsi,rax
  40080d:	mov    edi,0x1
  400812:	call   4005e0 <write@plt>
  400817:	mov    rdx,QWORD PTR [rbp-0x8]
  40081b:	lea    rax,[rbp-0x90]
  400822:	mov    rcx,rdx
  400825:	mov    edx,0x80
  40082a:	mov    esi,0x1
  40082f:	mov    rdi,rax
  400832:	call   4005d0 <fread@plt>
  400837:	mov    QWORD PTR [rbp-0x10],rax
  40083b:	cmp    QWORD PTR [rbp-0x10],0x0
  400840:	jne    4007ff <read_file+0x2c>
  400842:	nop
  400843:	leave  
  400844:	ret    
  400845:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40084f:	nop

0000000000400850 <__libc_csu_init>:
  400850:	push   r15
  400852:	push   r14
  400854:	mov    r15d,edi
  400857:	push   r13
  400859:	push   r12
  40085b:	lea    r12,[rip+0x2005a6]        # 600e08 <__frame_dummy_init_array_entry>
  400862:	push   rbp
  400863:	lea    rbp,[rip+0x2005ae]        # 600e18 <__init_array_end>
  40086a:	push   rbx
  40086b:	mov    r14,rsi
  40086e:	mov    r13,rdx
  400871:	sub    rbp,r12
  400874:	sub    rsp,0x8
  400878:	sar    rbp,0x3
  40087c:	call   400590 <_init>
  400881:	test   rbp,rbp
  400884:	je     4008a6 <__libc_csu_init+0x56>
  400886:	xor    ebx,ebx
  400888:	nop    DWORD PTR [rax+rax*1+0x0]
  400890:	mov    rdx,r13
  400893:	mov    rsi,r14
  400896:	mov    edi,r15d
  400899:	call   QWORD PTR [r12+rbx*8]
  40089d:	add    rbx,0x1
  4008a1:	cmp    rbx,rbp
  4008a4:	jne    400890 <__libc_csu_init+0x40>
  4008a6:	add    rsp,0x8
  4008aa:	pop    rbx
  4008ab:	pop    rbp
  4008ac:	pop    r12
  4008ae:	pop    r13
  4008b0:	pop    r14
  4008b2:	pop    r15
  4008b4:	ret    
  4008b5:	nop
  4008b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004008c0 <__libc_csu_fini>:
  4008c0:	repz ret 

Disassembly of section .fini:

00000000004008c4 <_fini>:
  4008c4:	sub    rsp,0x8
  4008c8:	add    rsp,0x8
  4008cc:	ret    
